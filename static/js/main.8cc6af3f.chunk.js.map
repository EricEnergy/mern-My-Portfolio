{"version":3,"sources":["images/underc.jpg","images/e2.0.png","components/contact.js","components/main.js","components/portfolio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TodosList","Jumbotron","Component","id","Row","Col","className","src","logo","height","width","margi","alt","md","href","App","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","to","eventKey","exact","path","component","Main","Contact","Portfolio","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,6NCGtBC,E,iLAEb,OACI,kBAACC,EAAA,EAAD,KACA,6BACI,8D,GALuBC,a,gCCOlBF,E,iLAEb,OACI,6BACI,kBAACC,EAAA,EAAD,CAAWE,GAAG,aACV,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,CAAKC,UAAU,sBAAqB,yBAAKC,IAAKC,IAAMC,OAAO,MAAMC,MAAM,MAAMC,MAAM,OAAOC,IAAI,UAC9F,kBAACP,EAAA,EAAD,WAEJ,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,sBAAqB,8DAExC,kBAACF,EAAA,EAAD,CAAKE,UAAU,eACX,kBAACD,EAAA,EAAD,UACA,kBAACA,EAAA,EAAD,CAAKQ,GAAG,QACJ,sGAA2E,6BAA3E,yEAAuJ,6BAAvJ,6BACJ,6BADI,kBAKJ,kBAACR,EAAA,EAAD,WAEJ,kBAACD,EAAA,EAAD,CAAKE,UAAU,eACf,kBAACD,EAAA,EAAD,UACI,kBAACA,EAAA,EAAD,CAAKQ,GAAG,QACR,uBAAGC,KAAK,gDAAR,eACA,uBAAGA,KAAK,iCAAR,YAEA,kBAACT,EAAA,EAAD,iB,GA7BeH,aCPlBF,E,iLAEb,OACI,kBAACC,EAAA,EAAD,KACA,6BACI,qE,GALuBC,a,iBCiCxBa,E,iLAxBX,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CAAQb,GAAG,WAAWc,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACnE,kBAACJ,EAAA,EAAOK,MAAR,CAAcP,KAAK,sBAAqB,yBAAKP,IAAKC,IAAME,MAAM,KAAKD,OAAO,MAC1E,kBAACO,EAAA,EAAOM,OAAR,CAAeC,gBAAc,0BAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBrB,GAAG,yBAClB,kBAACsB,EAAA,EAAD,CAAKnB,UAAU,YAEf,kBAACmB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,cAAT,cADF,KAEE,kBAAC,IAAD,CAAMC,SAAU,EAAGD,GAAG,YAAtB,iBAMN,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAKC,UAAWC,IAClC,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,IAClC,kBAAC,IAAD,CAAOH,KAAK,aAAaC,UAAWG,S,GApB1B/B,aCEEgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8cc6af3f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/underc.0111b6fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/e2.0.ab29f159.png\";","import React, { Component } from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nexport default class TodosList extends Component {\r\n    render() {\r\n        return (\r\n            <Jumbotron> \r\n            <div>\r\n                <p>Welcome to Contact Page!!</p>\r\n            </div>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport logo from '../images/underc.jpg';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default class TodosList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Jumbotron id=\"jumbotron\">\r\n                    <Row>\r\n                        <Col> </Col>\r\n                        <Col className=\"text-center powder\"><img src={logo} height=\"200\" width=\"200\" margi=\"auto\" alt=\"Logo\" /></Col>\r\n                        <Col> </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"text-center powder\"><h3>Web site under construction.</h3></Col>\r\n                    </Row>\r\n                    <Row className=\"text-center\">\r\n                        <Col> </Col>\r\n                        <Col md=\"auto\">\r\n                            <h6>In the mean time feel free to visit my Linkedin where I have featured  <br />projects or my Github where you will see my top starred projects with <br />links to my deployed work.\r\n                        <br/>\r\n                        -Eric Simmons\r\n                             </h6>\r\n                        </Col>\r\n                        <Col> </Col>\r\n                    </Row>\r\n                    <Row className=\"text-center\">\r\n                    <Col> </Col>\r\n                        <Col md=\"auto\">\r\n                        <a href=\"https://www.linkedin.com/in/ericsimmonsnash/\">Linkedin  |</a>\r\n                        <a href=\"https://github.com/EricEnergy\"> Github</a>\r\n                        </Col>\r\n                        <Col> </Col>\r\n                    </Row>\r\n\r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nexport default class TodosList extends Component {\r\n    render() {\r\n        return (\r\n            <Jumbotron> \r\n            <div>\r\n                <p>Welcome to Portfolio Component!!</p>\r\n            </div>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Navbar, Nav} from 'react-bootstrap'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contact from \"./components/contact\";\nimport Main from \"./components/main\";\nimport Portfolio from \"./components/portfolio\";\n\nimport logo from './images/e2.0.png';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navbar id=\"navbarId\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"/mern-My-Portfolio\"><img src={logo} width=\"60\" height=\"\" /></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            </Nav>\n            <Nav>\n              <Link to=\"/portfolio\">Portfolio </Link> |\n              <Link eventKey={2} to=\"/contact\">\n                 Contact Me\n      </Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Route exact path=\"/\"  component={Main} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}